# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-app:
    # These next lines define a Docker executor: https://circleci.com/docs/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image:  cimg/openjdk:17.0
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - setup_remote_docker
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: ./mvnw clean install
      - run:
          name: Build application Docker image
          command: |
            docker build -t app .
      - deploy:
          name: Deploy docker image
          command: |
            docker login -u $username -p $password
            docker tag app:latest $dockerhubimage
            docker push $dockerhubimage
  push-image-to-gke:
    docker:
      - image: google/cloud-sdk
#    environment:
#      - PROJECT_NAME: $PROJECT_NAME
#      - GOOGLE_PROJECT_ID: $PROJECT_ID
#      - GOOGLE_COMPUTE_ZONE: $PROJECT_ZONE
#      - GOOGLE_CLUSTER_NAME: $PROJECT_NAME
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${PROJECT_ID}
            gcloud --quiet config set compute/zone ${COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${CLUSTER_NAME}
      - run:
          name: Deploy to Kubernetes
          command: |
            kubectl run nginx --image=nginx
#            envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
#            kubectl apply -f ${HOME}/patched_k8s.yml
#            kubectl rollout status deployment/${PROJECT_NAME}


# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-app
      - push-image-to-gke:
           requires:
             - build-app